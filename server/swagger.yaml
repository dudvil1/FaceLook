swagger: '3.0'
info:
  description: API For FaceLook
  version: '0.2.0'
  title: Node Rest API documentation
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost:3000
basePath: /
schemes:
- http

paths:
  /help:
    get:
      tags:
        - Default Module
      summary: Get The Default Message Of The Server
      description: API for Basic Help + Version Of FaceLook Server
      produces:
        - application/json
      responses:
        '200':
          description: Welcome To FaceLook
          schema: 
            $ref: '#/ResponseDefinitions/DefaultApiResponse'
  
  /status:
    get:
      tags:
        - Default Module
      summary: Get The status Of The Server
      description: API for Version Of FaceLook Server
      produces:
        - application/json
      responses:
        '200':
          description: 
          schema: 
            $ref: '#/ResponseDefinitions/DefaultApiResponse'         

  /registration/register:
    post:
      tags:
        - Registration Module
      summary: register
      description: API for New User
      parameters:
        - in: body
          name: body
          description: register Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/RegisterModel'
      produces:
        - application/json
      responses:
        '201':
          description:  User Created Successfully , Please check Your Mail To Verify Your Account
          schema:
            $ref: '#/ResponseDefinitions/DefaultApiResponse'
        '409':
          description: user already exist,try again
        '500':
          description: Internal Server Error

  /registration/login:
    post:
      tags:
        - Registration Module
      summary: LogIn
      description: API for LogIn
      parameters:
        - in: body
          name: body
          description: LogIn Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/LogInModel'
      produces:
        - application/json
      responses:
        '200':
          description: Authorize successful
          schema:
            $ref: '#/ResponseDefinitions/LogInApiResponse'
        '409':
          description: You Didn`t Verify Your Account Yet,Please Check Your Mail Box And Verify It
        '401':
          description: Wrong Password
        '500':
          description: Internal Server Error

  /registration/verifyAccount:
    patch:
      tags:
        - Registration Module
      summary: Verify User Account
      description: API To Verify User Account
      parameters:
        - in: body
          name: body
          description: verify Account Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/verifyAccountModel'
      produces:
        - application/json
      responses:
        '200':
          description: active account Successfully , you can log in now
          schema:
            $ref: '#/ResponseDefinitions/verifyAccountResponse'
        '404':
          description: User did not found
        '500':
          description: Internal Server Error
  
  /registration/getResetCodePassword:
    patch:
      tags:
        - Registration Module
      summary: Get Reset Code Password To Email For Update Password
      description: API To Verify Get Reset Code Password
      parameters:
        - in: body
          name: body
          description: User Email Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/getResetCodePassword'
      produces:
        - application/json
      responses:
        '200':
          description: an email send to your mail
          schema:
            $ref: '#/ResponseDefinitions/DefaultApiResponse'
        '500':
          description: Internal Server Error         
   
  /registration/forgetPassword:
    patch:
      tags:
        - Registration Module
      summary: Update Your Password With The Reset Code
      description: API To Update Your Password
      parameters:
        - in: body
          name: body
          description: Reset Code && New password Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/forgetPassword'
      produces:
        - application/json
      responses:
        '200':
          description: password change successfuly
          schema:
            $ref: '#/ResponseDefinitions/DefaultApiResponse'
        '500':
          description: Internal Server Error         

  /social/addPost:
    post:
      security:
        - Bearer: []
      tags:
        - Post Module
      summary: Adding New Post
      description: API for creating New Post
      parameters:
        - in: body
          name: body
          description: Create Post Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: post Created Successfully
          schema:
            $ref: '#/ResponseDefinitions/DefaultApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /social/getPosts:
    get:
      security:
        - Bearer: []
      tags:
        - Post Module
      summary: Getting All The Posts
      description: API for Get All Posts
      produces:
        - application/json
      responses:
        '200':
          description: Get The Post successfuly
          schema:
            $ref: '#/ResponseDefinitions/getPostsResponse'
        '500':
          description: Internal Server Error          
  
  /social/filterPosts/{filters}:
    get:
      security:
        - Bearer: []
      tags:
        - Post Module
      summary: Getting The Compatible Posts
      description: API for Getting All The Posts That Compatible with filter
      parameters:
        - in: params
          name: params
      produces:
        - application/json
      responses:
        '200':
          description: Get The Posts successfuly
          schema:
            $ref: '#/ResponseDefinitions/getPostsResponse'
        '500':
          description: Internal Server Error
  
  /social/updateLikes:
    patch:
      security:
        - Bearer: []
      tags:
        - Post Module
      summary: Likeing a Post
      description: API for Adding Like For Post
      parameters:
        - in: body
          name: body
          description: post Payload
          required: true
          schema:
            $ref: '#/RequestDefinitions/PostRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Post-Like updated successfuly
          schema:
            $ref: '#/ResponseDefinitions/DefaultApiResponse'
        '500':
          description: Internal Server Error
 
  /friend/addFriend:
   post:
     security:
      - Bearer: []
     tags: 
       - Friend Module
     summary: Adding New Friend
     description: API For Adding New Friend To The Friend List    
     parameters:
        - in: body
          name: body
          description: User && Friend Id's
          required: true
          schema:
             $ref: '#/RequestDefinitions/FriendRequest'
     produces:
       - application/json
     responses:
        '200': 
          schema:
            $ref: '#/ResponseDefinitions/AddFriendResponse'   
        '401':
          description: Failure to Add Friend
        '500':
          description: Internal Server Error              

  /friend/searchUsers/{data}:
    get:
      security:
        - Bearer: []
      tags:
        - Friend Module
      summary: Search an User
      description: Api For Searching sn User
      parameters: 
        - in: params
          name: params
          description: Some Letters To Search People 
          required: true
          schema:
            $ref: '#/RequestDefinitions/'
          produces:
            - application/json
      responses:
            '201':
               schema:
                 $ref: '#/ResponseDefinitions/getPostsResponse'
            '500':
              description: Internal Server Error     
                
  /friend/updateFollowFriend:
    post:
      security:
       Bearer: []
      tags: 
       - Friend Module
      summary: Follow/Stop Follow  User
      description: Api For Follow Unfollow User
      parameters: 
        - in: body
          name: body
          description: User && Friend Id's
          schema: 
             $ref: '#/RequestDefinitions/FriendRequest'
          produces:
            - application/json
      responses:
        '200':
          schema:
             $ref: '#/ResponseDefinitions/getPostsResponse'
        '401':
          description: Failure to Follow Friend
        '500':
          description: Internal Server Error       



openapi: 3.0.0
# 1) Define the security scheme type (HTTP bearer)
components:
  securitySchemes:
    Bearer:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT


RequestDefinitions:
   RegisterModel:
    properties:
      name:
        type: string
        description: name of user
      email:
        type: string
        description: email of user
      password:
        type: string
        description: password of the user

   LogInModel:
    properties:
      email:
        type: string
        description: email of user
      password:
        type: string
        description: password of the user

   verifyAccountModel:
    properties:
      id:
        type: string
        description: id of the user(get it from the snapshot)

   getResetCodePassword:
    properties:
      email:
        type: string
        description: Email Of The User

   forgetPassword:
    properties:
      ResetCode:
        type: string
        description: The Reset Code That Send To your mail
      newPassword:
        type: string
        description: Your New Password

   PostRequest:
    properties:
      image:
        type: file
        description: Image Of The Post
      title:
        type: string
        description: Image Of The Post
      text:
        type: string
        description: Text Of The Post
      location Latitude:
        type: string
        description: The location Latitude Of The Post
      location Longtitude:
        type: string
        description: The location Langtitude Of The Post
      date:
        type: string
        description: The Date Of The Post Time

   FriendRequest:
    properties: 
      userId:
       type: string
       description: Id of The User
      FriendId:
        type: string
        description: Id of The Friend That The User Try To Connect      

ResponseDefinitions:
  DefaultApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object

  LogInApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object 
        properties: 
          token:
            type: string

  getPostsResponse:
    type: object
    properties:
      status:
        type: integer
      body:
        type: array
        items:
         type: object
         properties: 
          post_id:
           type: string
           description: Id Of The Post
          publisher_id:
           type: string
           description: Id Of The Publisher
          image:
           type: string
           description: Image url   
          text:
           type: string
           description: Text Of The Post
          date:
           type: string
           description: Date Of The Post
          latitude:
           type: string
           description: Location Latitude Of The Post
          longtitude:
           type: string
           description: Location longtitude Of The Post
          likes:
           type: string
           description: Likes Number Of The Post
   
  verifyAccountResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object    

  AddFriendResponse:
    type: object
    properties:
      status:
        type: integer
      body:
        type: object
        properties:
          user: object


                  
            

